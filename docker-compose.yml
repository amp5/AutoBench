version: "3"
services:
  db:
    image: postgres
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: any
    environment:
      POSTGRES_USER: root
      POSTGRES_DB: model-test
      POSTGRES_PASSWORD: password
    # volumes:
    #   - "db-data:/var/lib/postgresql/data"
    ports:
      - 5432:5432
  testdata:
    image: chughto/autobench:build-data
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      PGHOST: db
      PGUSER: root
      PGDATABASE: model-test
      PGPASSWORD: password
  textblob:
    image: chughto/autobench:textblob
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      PGHOST: db
      PGUSER: root
      PGDATABASE: model-test
      PGPASSWORD: password
  vader:
    image: chughto/autobench:vader
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      PGHOST: db
      PGUSER: root
      PGDATABASE: model-test
      PGPASSWORD: password
  random:
    image: chughto/autobench:random
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      PGHOST: db
      PGUSER: root
      PGDATABASE: model-test
      PGPASSWORD: password
  calcmetrics:
    image: chughto/autobench:calcmetrics
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      PGHOST: db
      PGUSER: root
      PGDATABASE: model-test
      PGPASSWORD: password
  dash:
    image: chughto/autobench:dash
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: any
    environment:
      PGHOST: db
      PGUSER: root
      PGDATABASE: model-test
      PGPASSWORD: password
    ports:
      - 8080:8080

# volumes:
#   db-data:
#     driver: local
